generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Plan {
  FREE
  PRO
  ULTIMATE
}

enum UserRole {
  READ
  READ_WRITE
  ADMIN
}

enum InvitationStatus {
  ACCEPTED
  REVOKED
  PENDING
}

model User {
  id         String          @id @default(uuid())
  name       String
  avatarUrl  String          @db.Text
  email      String          @unique
  createdAt  DateTime        @default(now())
  updatedAt  DateTime        @updatedAt
  plan       Plan            @default(FREE)
  workspaces WorkspaceUser[]
}

model Workspace {
  id          String          @id @default(uuid())
  name        String
  coverUrl    String          @db.Text
  logoUrl     String          @db.Text
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  users       WorkspaceUser[]
  invitations Invitation[]
}

model WorkspaceUser {
  user        User      @relation(fields: [userId], references: [id])
  userId      String
  workspace   Workspace @relation(fields: [workspaceId], references: [id])
  workspaceId String
  role        UserRole
  assignedAt  DateTime  @default(now())

  @@id([userId, workspaceId])
  @@index([userId])
  @@index([workspaceId])
}

model Invitation {
  id          String           @id @default(uuid())
  email       String           @unique
  userId      String
  workspaceId String
  workspace   Workspace        @relation(fields: [workspaceId], references: [id])
  status      InvitationStatus @default(PENDING)
  role        UserRole         @default(READ_WRITE)

  @@index([userId])
}
