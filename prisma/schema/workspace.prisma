model Workspace {
  id          String          @id @default(uuid())
  name        String
  coverUrl    String          @db.Text
  logoUrl     String          @db.Text
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  users       WorkspaceUser[]
  invitations Invitation[]
  documents   Document[]
}

model WorkspaceUser {
  user        User      @relation(fields: [userId], references: [id])
  userId      String
  workspace   Workspace @relation(fields: [workspaceId], references: [id])
  workspaceId String
  role        UserRole
  assignedAt  DateTime  @default(now())

  @@id([userId, workspaceId])
  @@index([userId])
  @@index([workspaceId])
}

model Invitation {
  id          String           @id @default(uuid())
  email       String
  userId      String
  workspaceId String
  workspace   Workspace        @relation(fields: [workspaceId], references: [id])
  status      InvitationStatus @default(PENDING)
  role        UserRole         @default(READ_WRITE)

  @@unique([workspaceId, userId, email])
  @@index([userId])
}

enum InvitationStatus {
  ACCEPTED
  REVOKED
  PENDING
}
